apply plugin: 'com.android.application'

android {
	compileSdkVersion 24
	buildToolsVersion "24.0.2"
	defaultConfig {
		applicationId "ru.ancientempires"
		minSdkVersion 15
		targetSdkVersion 24
		versionCode 1
		versionName "1.0"
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	sourceSets {
		main {
			java.srcDirs += 'src/basic/java'
			// Not working with Instant Run
			//resources.srcDirs = ["build/intermediates/classes/debug"]
		}
	}
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
		exclude group: 'com.android.support', module: 'support-annotations'
	})
	compile 'com.android.support:appcompat-v7:24.2.1'
	testCompile 'junit:junit:4.12'

	compile 'com.google.code.gson:gson:2.7'
	compile 'org.atteo.classindex:classindex:3.3'
	//compile 'ch.acra:acra:4.9.0'
}

// Package the preprocessed Annotations (ClassIndex) into the APK
tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
	android.applicationVariants.all { variant ->
		def String variantName = variant.getName().capitalize()
		if (pkgTask.getName().indexOf(variantName) != -1) {
			copy {
				from new File(buildDir, "intermediates/classes/$variant.dirName/META-INF/services/")
				into new File(buildDir, "intermediates/sourceFolderJavaResources/$variant.dirName/META-INF/services/");
			}
		}
	}
}